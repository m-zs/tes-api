services:
  postgres:
    image: postgres
    container_name: tes-api-postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  postgres-test:
    image: postgres
    container_name: tes-api-postgres-test
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_TEST_DB}
    ports:
      - "${POSTGRES_TEST_PORT}:5432"
    volumes:
      - pgdata_test:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    container_name: tes-api-pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    ports:
      - "${PGADMIN_PORT}:80"
    depends_on:
      - postgres
      - postgres-test

  api-prod:
    container_name: tes-api-prod
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 3001:3000
    env_file:
      - ./.env

  api-dev:
    container_name: tes-api-dev
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile.dev
    volumes:
      - .:/app
      - node_modules:/app/node_modules
    ports:
      - 3000:3000
    env_file:
      - ./.env

networks:
  app-network:
    driver: bridge

volumes:
  pgdata:
  pgdata_test:
  node_modules:
